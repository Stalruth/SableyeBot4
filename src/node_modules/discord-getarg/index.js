'use strict';
const levenshtein = require('fastest-levenshtein');

function getargs(interaction) {
  const subcommand = [];
  const params = {};

  const processOptions = (option) => {
    if([1,2].includes(option.type)) {
      subcommand.push(option.name);
      (option.options ?? []).forEach(processOptions);
    } else {
      params[option.name] = option.value;
    }
  };

  (interaction.data.options ?? []).forEach(processOptions);

  return {subcommand, params};
}

function getarg_2(options, name) {
  for(const option of options) {
    if(option.options) {
      const result = getarg_2(option.options, name);
      if(result) {
        return result;
      }
    }
    if(option.name === name) {
      return option;
    }
  }
  return undefined;
}

function getarg(interaction, name) {
  return getarg_2(interaction.data.options ?? [], name);
}

module.exports = { getarg, getargs };

