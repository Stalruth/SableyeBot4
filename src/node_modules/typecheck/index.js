'use strict';

const coverage = function(types, data) {
  const effectiveness = [
    {
      label: '0.0x',
      types: [],
    },
    {
      label: '0.5x',
      types: [],
    },
    {
      label: '1.0x',
      types: [],
    },
    {
      label: '2.0x',
      types: [],
    },
  ];
  
  const translate = {
    0: 0,
    0.5: 1,
    1: 2,
    2: 3
  };

  for(const type of data.types) {
    let eff = types.reduce((ac, cv) => {
      return Math.max(ac, data.types.get(cv)['effectiveness'][type.name]);
    }, 0);
    effectiveness[translate[eff]]['types'].push(type.name);
  }
  
  return effectiveness;
};

const damageTaken = function(types, data) {
  const effectiveness = [
    {
      label: '0.0x',
      types: [],
    },
    {
      label: '0.25x',
      types: [],
    },
    {
      label: '0.5x',
      types: [],
    },
    {
      label: '1.0x',
      types: [],
    },
    {
      label: '2.0x',
      types: [],
    },
    {
      label: '4.0x',
      types: [],
    },
  ];
  
  const translate = {
    0: 0,
    0.25: 1,
    0.5: 2,
    1: 3,
    2: 4,
    4: 5,
  };

  for(const type of data.types) {
    let eff = types.reduce((ac, cv) => {
      return ac * type['effectiveness'][cv];
    }, 1);
    effectiveness[translate[eff]]['types'].push(type.name);
  }
  
  return effectiveness;
};

module.exports = { coverage, damageTaken };

